---
import HomePage from "../../layouts/HomePage.astro";
import { getReadingTime } from "../../common/utils";

export async function getStaticPaths() {
  const posts = await Astro.glob("../../content/*.md");
  return posts.map((post) => ({
    params: {
      id: post.frontmatter.id || post.file.split("/").pop().split(".")[0],
    },
    props: { post },
  }));
}

const { id } = Astro.params;
const { post } = Astro.props;

if (!post) {
  return Astro.redirect("/404");
}

const { Content, frontmatter } = post;
const readingTime = getReadingTime(post.rawContent());
---

<HomePage title={frontmatter.title || "文章"}>
  <main class="main-content">
    <sidebar class="sidebar">
      <div class="toc">
        <!-- <h2>目录</h2> -->
        <nav id="toc"></nav>
      </div>
    </sidebar>
    <article>
      <h1>{frontmatter.title}</h1>
      <div class="meta">
        {
          frontmatter.date && (
            <span class="date">发布日期：{frontmatter.date}</span>
          )
        }
        <span class="reading-time">阅读时间：约 {readingTime} 分钟</span>
      </div>

      <div
        class="prose dark:prose-invert
  prose-h1:font-bold prose-h1:text-xl
  prose-a:text-blue-600 prose-p:text-justify prose-img:rounded-xl
  prose-headings:underline"
      >
        <Content />
      </div>
    </article>
  </main>
</HomePage>

<style>
  main.main-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
  }

  .sidebar {
    position: absolute;
    top: 0px;
    left: 0;
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
    padding: 2rem 0;

    nav#toc {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  article {
    width: 80%;
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 0;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .meta {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
    font-size: 0.9rem;
    color: var(--color-text-secondary);
  }

  .toc {
    background-color: var(--color-bg-secondary);
    padding: 1rem;
    margin-bottom: 2rem;
    border-radius: 0.5rem;
  }

  .toc h2 {
    font-size: 1.2rem;
    margin-bottom: 0.5rem;
  }

  :global(.toc-link) {
    color: var(--color-text);
    text-decoration: none;
  }

  :global(.toc-link:hover) {
    text-decoration: underline;
  }
</style>

<script>
  // 添加代码块复制功能
  const codeBlocks = document.querySelectorAll("pre");
  codeBlocks.forEach((block) => {
    const copyButton = document.createElement("button");
    copyButton.textContent = "复制";
    copyButton.classList.add("copy-button");
    block.appendChild(copyButton);

    copyButton.addEventListener("click", () => {
      const code = block.querySelector("code");
      navigator.clipboard.writeText(code?.textContent!).then(() => {
        copyButton.textContent = "已复制";
        setTimeout(() => {
          copyButton.textContent = "复制";
        }, 2000);
      });
    });
  });
</script>
